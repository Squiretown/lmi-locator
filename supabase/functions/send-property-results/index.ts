import { serve } from "https://deno.land/std@0.190.0/http/server.ts";
import { Resend } from "npm:resend@2.0.0";

const resend = new Resend(Deno.env.get("RESEND_API_KEY"));

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers":
    "authorization, x-client-info, apikey, content-type",
};

interface PropertyResultsEmailRequest {
  recipientEmail: string;
  address: string;
  isApproved: boolean;
  tractId?: string;
  senderName?: string;
}

const handler = async (req: Request): Promise<Response> => {
  // Handle CORS preflight requests
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { recipientEmail, address, isApproved, tractId, senderName }: PropertyResultsEmailRequest = await req.json();

    console.log("Sending property results email to:", recipientEmail);

    const status = isApproved ? 'LMI Eligible' : 'Not in LMI Area';
    const tractInfo = tractId ? `\nCensus Tract: ${tractId}` : '';
    const senderInfo = senderName ? `\n\nShared by: ${senderName}` : '';

    const emailResponse = await resend.emails.send({
      from: "LMI Check <onboarding@resend.dev>",
      to: [recipientEmail],
      subject: "LMI Property Check Results",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <div style="text-align: center; margin-bottom: 30px;">
            <h1 style="color: #333; margin-bottom: 10px;">LMI Property Check Results</h1>
            <div style="width: 60px; height: 4px; background: linear-gradient(135deg, #3b82f6, #1d4ed8); margin: 0 auto;"></div>
          </div>
          
          <div style="background: #f8fafc; padding: 25px; border-radius: 8px; margin: 20px 0;">
            <h2 style="color: #1e293b; margin-top: 0; margin-bottom: 15px;">Property Information</h2>
            <p style="margin: 8px 0; color: #475569;"><strong>Address:</strong> ${address}</p>
            <p style="margin: 8px 0; color: #475569;"><strong>Status:</strong> 
              <span style="color: ${isApproved ? '#059669' : '#dc2626'}; font-weight: bold;">${status}</span>
            </p>
            ${tractInfo ? `<p style="margin: 8px 0; color: #475569;"><strong>Census Tract:</strong> ${tractId}</p>` : ''}
          </div>
          
          <div style="background: ${isApproved ? '#f0fdf4' : '#fef2f2'}; border-left: 4px solid ${isApproved ? '#10b981' : '#ef4444'}; padding: 15px; margin: 20px 0;">
            <p style="margin: 0; color: #374151; font-size: 14px;">
              ${isApproved 
                ? '✅ This property is located in a Low-to-Moderate Income (LMI) eligible area and may qualify for special financing programs.' 
                : '❌ This property is not located in an LMI eligible area and may not qualify for certain LMI-specific programs.'}
            </p>
          </div>
          
          <div style="margin: 30px 0; text-align: center;">
            <a href="https://lmicheck.com" style="background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block; font-weight: 500;">
              Check Another Property
            </a>
          </div>
          
          <div style="border-top: 1px solid #e5e7eb; padding-top: 20px; margin-top: 30px; text-align: center;">
            <p style="color: #6b7280; font-size: 14px; margin: 5px 0;">
              This report was generated by <strong>LMICheck.com</strong>
            </p>
            <p style="color: #6b7280; font-size: 12px; margin: 5px 0;">
              Low-to-Moderate Income eligibility determination based on U.S. Census Bureau data
            </p>
            ${senderInfo ? `<p style="color: #6b7280; font-size: 12px; margin: 5px 0;">${senderInfo.trim()}</p>` : ''}
          </div>
        </div>
      `,
    });

    console.log("Email sent successfully:", emailResponse);

    return new Response(JSON.stringify({ 
      success: true, 
      emailId: emailResponse.data?.id 
    }), {
      status: 200,
      headers: {
        "Content-Type": "application/json",
        ...corsHeaders,
      },
    });
  } catch (error: any) {
    console.error("Error in send-property-results function:", error);
    return new Response(
      JSON.stringify({ 
        error: error.message,
        success: false 
      }),
      {
        status: 500,
        headers: { "Content-Type": "application/json", ...corsHeaders },
      }
    );
  }
};

serve(handler);